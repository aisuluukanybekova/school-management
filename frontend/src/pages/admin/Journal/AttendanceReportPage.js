import React, { useEffect, useState } from 'react';
import {
  Box, Typography, Paper, Table, TableBody, TableCell,
  TableContainer, TableHead, TableRow, Alert, Button
} from '@mui/material';
import axios from 'axios';
import { useLocation } from 'react-router-dom';
import * as XLSX from 'xlsx';
import { saveAs } from 'file-saver';

const AttendanceReportPage = () => {
  const location = useLocation();
  const { classId, subjectId, term } = location.state || {};

  const [report, setReport] = useState([]);
  const [error, setError] = useState('');

  useEffect(() => {
    if (!classId || !subjectId || !term) {
      setError('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç—á—ë—Ç–∞');
      return;
    }

    axios.get('/api/attendance/report', {
      params: { classId, subjectId, term }
    })
      .then(res => setReport(res.data || []))
      .catch(() => setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á—ë—Ç–∞'));
  }, [classId, subjectId, term]);

  const exportToExcel = () => {
    const data = report.map((r, i) => ({
      '‚Ññ': i + 1,
      '–£—á–µ–Ω–∏–∫': r.studentName,
      '–í—Å–µ–≥–æ': r.totalLessons,
      '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª': r.present,
      '–û—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª': r.absent,
      '%': r.percent
    }));

    const worksheet = XLSX.utils.json_to_sheet(data);
    const workbook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(workbook, worksheet, '–û—Ç—á—ë—Ç');
    const buf = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });
    saveAs(new Blob([buf], { type: 'application/octet-stream' }), '–û—Ç—á—ë—Ç_–ø–æ_–ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏.xlsx');
  };

  return (
    <Box p={4}>
      <Typography variant="h5" fontWeight="bold" gutterBottom>
        üìÑ –û—Ç—á—ë—Ç –ø–æ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
      </Typography>

      {error && <Alert severity="error">{error}</Alert>}

      {!error && report.length > 0 && (
        <>
          <Box mb={2}>
            <Button variant="contained" color="success" onClick={exportToExcel}>
              ‚¨áÔ∏è Excel
            </Button>
          </Box>

          <TableContainer component={Paper}>
            <Table size="small">
              <TableHead>
                <TableRow>
                  <TableCell>‚Ññ</TableCell>
                  <TableCell>–£—á–µ–Ω–∏–∫</TableCell>
                  <TableCell align="center">–í—Å–µ–≥–æ</TableCell>
                  <TableCell align="center">–ü—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª</TableCell>
                  <TableCell align="center">–û—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª</TableCell>
                 <TableCell align="center">%</TableCell>

                </TableRow>
              </TableHead>
              <TableBody>
                {report.map((r, i) => (
                  <TableRow key={i}>
                    <TableCell>{i + 1}</TableCell>
                    <TableCell>{r.studentName}</TableCell>
                    <TableCell align="center">{r.totalLessons}</TableCell>
                    <TableCell align="center">{r.present}</TableCell>
                    <TableCell align="center">{r.absent}</TableCell>
                    <TableCell align="center">{r.percent}%</TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </TableContainer>
        </>
      )}

      {!error && report.length === 0 && (
        <Alert severity="info">–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—á—ë—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</Alert>
      )}
    </Box>
  );
};

export default AttendanceReportPage;
